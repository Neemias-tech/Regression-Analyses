ggplot(df) + geom_point(aes(x=birth_year, y=height), alpha= 1/100)
ggplot(df) + geom_point(aes(x=birth_year, y=height))
ggplot(df) + geom_hex(aes(x=birth_year, y=height))
#Loading the library tidyverse
library(tidyverse)
library(modelr)
# loading the data set
df <- starwars
mod <- lm(log(sex)~log(birth_year), data= df)
mod <- lm(log(heights)~log(birth_year), data= df)
knitr::opts_chunk$set(echo = TRUE)
#library load
library(tidyverse)
#loading data-set starwars
df <- starwars
#loading data-set starwars
df <- starwars
head(df)
knitr::opts_chunk$set(echo = TRUE)
head(df)
by(df$height, df$sex,summary)
by(df$height, df$sex,median)
by(df$height, df$sex,mean)
print("summary:", by(df$height, df$sex,summary))
cat("Summary: \n")
by(df$height, df$sex,summary)
cat("Median: \n")
by(df$height, df$sex,median)
cat("Mean: \n")
by(df$height, df$sex,mean)
df_clean <- na.omit(df)
cat("Summary: \n")
by(df$height, df$sex,summary)
cat("Median: \n")
by(df$height, df$sex,median)
cat("Mean: \n")
by(df$height, df$sex,mean)
cat("Summary: \n")
by(df_clean$height, df_clean$sex,summary)
cat("Median: \n")
by(df_clean$height, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$height, df_clean$sex,mean)
library(dplyr)
df_clean <- df %>% drop_na()
cat("Summary: \n")
by(df_clean$height, df_clean$sex,summary)
cat("Median: \n")
by(df_clean$height, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$height, df_clean$sex,mean)
cat("Summary: \n")
by(df$height, df$sex,summary)
cat("Median: \n")
by(df_clean$height, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$height, df_clean$sex,mean)
df_clean <- df[complete.cases(df), ]
df_clean <- df[complete.cases(df),"none" ]
df_clean <- df %>% filter(!if_any(everything(), is.na))
cat("Summary: \n")
by(df_clean$height, df_clean$sex,summary)
cat("Median: \n")
by(df_clean$height, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$height, df_clean$sex,mean)
cat("Summary: \n")
by(df_clean$mass, df_clean$sex,summary)
cat("Median: \n")
by(df_clean$mass, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$mass, df_clean$sex,mean)
cat("Summary: \n")
by(df_clean$birth_year, df_clean$sex,summary)
cat("Median: \n")
by(df_clean$birth_year, df_clean$sex,median)
cat("Mean: \n")
by(df_clean$birth_year, df_clean$sex,mean)
cat("Summary: \n")
by(df_clean$birth_year, df_clean$gender,summary)
cat("Median: \n")
by(df_clean$birth_year, df_clean$gender,median)
cat("Mean: \n")
by(df_clean$birth_year, df_clean$gender,mean)
cat("Summary: \n")
by(df_clean$mass, df_clean$gender,summary)
cat("Median: \n")
by(df_clean$mass, df_clean$gender,median)
cat("Mean: \n")
by(df_clean$mass, df_clean$gender,mean)
cat("Summary: \n")
by(df_clean$height, df_clean$gender,summary)
cat("Median: \n")
by(df_clean$height, df_clean$gender,median)
cat("Mean: \n")
by(df_clean$height, df_clean$gender,mean)
cat("Summary: \n")
by(df_clean$height, df_clean$species,summary)
cat("Median: \n")
by(df_clean$height, df_clean$species,median)
cat("Mean: \n")
by(df_clean$height, df_clean$species,mean)
cat("Summary: \n")
by(df_clean$mass, df_clean$species,summary)
cat("Median: \n")
by(df_clean$mass, df_clean$species,median)
cat("Mean: \n")
by(df_clean$mass, df_clean$species,mean)
cat("Summary: \n")
by(df_clean$birth_year, df_clean$species,summary)
cat("Median: \n")
by(df_clean$birth_year, df_clean$species,median)
cat("Mean: \n")
by(df_clean$birth_year, df_clean$species,mean)
cat("Summary: \n")
by(df_clean$height, df_clean$homeworld,summary)
cat("Median: \n")
by(df_clean$height, df_clean$homeworld,median)
cat("Mean: \n")
by(df_clean$height, df_clean$homeworld,mean)
cat("Summary: \n")
by(df_clean$mass, df_clean$homeworld,summary)
cat("Median: \n")
by(df_clean$mass, df_clean$homeworld,median)
cat("Mean: \n")
by(df_clean$mass, df_clean$homeworld,mean)
cat("Summary: \n")
by(df_clean$birth_year, df_clean$homeworld,summary)
cat("Median: \n")
by(df_clean$birth_year, df_clean$homeworld,median)
cat("Mean: \n")
by(df_clean$birth_year, df_clean$homeworld,mean)
knitr::opts_chunk$set(echo = TRUE)
boxplot(df_clean$sex~df_clean$height, notch=TRUE)
boxplot(df_clean$sex~df_clean$height, notch=TRUE, col=c("grey"))
boxplot(df_clean$sex~df_clean$mass, notch=TRUE, col=c("grey"))
boxplot(df_clean$mass ~ df_clean$sex, notch=TRUE, col=c("grey"))
boxplot(df_clean$height~df_clean$sex, notch=TRUE, col=c("gold"))
boxplot(df_clean$birth_year~df_clean$sex, notch=TRUE, col=c("red"))
boxplot(df_clean$height~df_clean$gender, notch=TRUE, col=c("gold"))
boxplot(df_clean$mass ~ df_clean$gender, notch=TRUE, col=c("grey"))
boxplot(df_clean$height~df_clean$homeworld, notch=TRUE, col=c("gold"))
boxplot(df_clean$mass ~ df_clean$homeworld, notch=TRUE, col=c("grey"))
boxplot(df_clean$birth_year~df_clean$homeworld, notch=TRUE, col=c("red"))
boxplot(df_clean$height~df_clean$species, notch=TRUE, col=c("gold"))
boxplot(df_clean$mass ~ df_clean$species, notch=TRUE, col=c("grey"))
boxplot(df_clean$birth_year~df_clean$species, notch=TRUE, col=c("red"))
boxplot(df_clean$birth_year~df_clean$gender, notch=TRUE, col=c("red"))
library(sm)
install.packages("sm")
library(sm)
sm.density.compare(df_clean$height, df_clean$sex, xlab="Height")
sm.density.compare(df_clean$mass, df_clean$sex, xlab="Mass")
sm.density.compare(df_clean$birth_year, df_clean$sex, xlab="Birth Year")
sm.density.compare(df_clean$birth_year, df_clean$homeworld, xlab="Birth Year")
sm.density.compare(df_clean$mass, df_clean$homeworld, xlab="Mass")
sm.density.compare(df_clean$height, df_clean$homeworld, xlab="Height")
sm.density.compare(df_clean$birth_year, df_clean$species, xlab="Birth Year")
sm.density.compare(df_clean$mass, df_clean$species, xlab="Mass")
sm.density.compare(df_clean$height, df_clean$species, xlab="Height")
sm.density.compare(df_clean$birth_year, df_clean$gender, xlab="Birth Year")
sm.density.compare(df_clean$mass, df_clean$gender, xlab="Mass")
sm.density.compare(df_clean$height, df_clean$gender, xlab="Height")
glimpse(df_clean)
info(df_clean)
glimpse(df_clean)
library(dplyr)
glimpse(df_clean)
xtabs(~homeworld+sex,df_clean)
plot()
xtabs(~homeworld+sex,df_clean)
plot(xtabs(~homeworld+sex,df_clean), main="Homeworld and Sex")
xtabs(~species+sex,df_clean)
xtabs(~films+sex,df_clean)
df_clean$films <- as.character(df_clean$films)
xtabs(~films+sex,df_clean)
xtabs(~homeworld+gender,df_clean)
plot(xtabs(~homeworld+sex,df_clean), main="Homeworld and Sex")
xtabs(~homeworld+species,df_clean)
plot(xtabs(~homeworld+sex,df_clean), main="Homeworld and Sex")
xtabs(~homeworld+species,df_clean)
xtabs(~species+sex,df_clean)
plot(xtabs(~species+sex,df_clean), main="Species and Sex")
xtabs(~homeworld+species,df_clean)
plot(xtabs(~homeworld+species,df_clean), main="Homeworld and Species")
library(gmodels)
install.package(gmodels)
install.packages(gmodels)
install.package("gmodels")
install.packages("gmodels")
library(gmodels)
CrossTable(df_clean$homeworld,df_clean$species,chisq = TRUE,prop.t = F)
CrossTable(df_clean$species,df_clean$sex,chisq = TRUE,prop.t = F)
CrossTable(df_clean$homeworld,df_clean$sex,chisq = TRUE,prop.t = F)
CrossTable(df_clean$species,df_clean$homeworld,chisq = TRUE,prop.t = F)
str(df_clean)
df_clean$films <- as.character(unlist(df_clean$films))
str(df_clean)
df_clean$films <- as.list(df_clean$films)
str(df_clean)
scatter.smooth(df_clean$height, df_clean$mass)
scatter.smooth(df_clean$height, df_clean$birth_year)
scatter.smooth(df_clean$mass, df_clean$birth_year)
knitr::opts_chunk$set(echo = TRUE)
df %>%
ggplot(aes(height,mass, colour = sex))+ geom_point(size = 3, alpha= 0.5)
#library load
library(tidyverse)
library(ggplot2)
library(dplyr)
df %>%
ggplot(aes(height,mass, colour = sex))+ geom_point(size = 3, alpha= 0.5)
df %>%
drop_na(sex) %>%
ggplot(aes(x=sex))+ geom_bar()
df %>%
drop_na(sex) %>%
ggplot(aes(x=sex))+ geom_bar(fill="blue")
+theme_bw() + labs(x= "Sex", y= NULL, title = "Count of sex")
df %>%
drop_na(sex) %>%
ggplot(aes(x=sex))+ geom_bar(fill="blue")
+theme_bw() + labs(x= "Sex", title = "Count of sex")
df %>%
drop_na(sex) %>%
ggplot(aes(x=sex))+ geom_bar(fill="blue")
+theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(x=sex))+geom_bar(fill="lightblue") + theme_bw()
df %>%
ggplot(aes(x=height))+ geom_histogram( binwidth = 2, fill="lightgreen")+ theme_bw()
df %>%
ggplot(aes(x=height))+ geom_histogram( binwidth = 50, fill="lightgreen")+ theme_bw()
df %>%
ggplot(aes(x=height))+ geom_histogram( binwidth = 25, fill="lightgreen")+ theme_bw()
df %>%
ggplot(aes(height,mass)) + geom_point(aes(color=species, size = sex )) + geom_smooth()+theme_minimal()
df %>%
ggplot(aes(height,mass)) + geom_point(aes(color=species )) + geom_smooth()+theme_minimal()
df %>%
ggplot(aes(height,mass)) + geom_point(aes(color=sex )) + geom_smooth()+theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass)) + geom_point(aes(color=sex )) + geom_smooth()+theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass)) +geom_boxplot()+geom_point(aes(colour = sex))
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass)) +geom_boxplot()
df %>%
filter(mass < 500) %>%
ggplot(aes(height,mass)) +geom_boxplot()
knitr::opts_chunk$set(echo = TRUE)
#library load
library(tidyverse)
library(ggplot2)
library(dplyr)
#loading data-set starwars
df <- starwars
head(df)
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass))+
geom_point()+
geom_smooth()+
facet_wrap(~sex)
theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass))+
geom_point()+
geom_smooth()
facet_wrap(~sex)
theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(height,mass, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(mass,height, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(birth_year,height, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(height,birth_year, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(mass,birth_year, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(birth_year,height, colour = sex))+
geom_point(size= 5, alpha = 0.3)+
geom_line(size =1)+
theme_minimal()
df %>%
drop_na(sex) %>%
ggplot(aes(sex,birth_year))+ geom_boxplot()+theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(sex,birth_year))+     geom_boxplot()+coord_flip()+theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(birth_year, fill=sex))+     geom_density()+theme_bw()
df %>%
drop_na(sex) %>%
ggplot(aes(birth_year, fill=sex))+     geom_density(alpha=0.3)+theme_bw()
df %>%
#filter(eye_color)
drop_na(species) %>%
ggplot(aes(eye_color, fill = species))+
geom_bar(position = "dodge", alpha= 0.4)+theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
df %>%
filter(eye_color == "blue" |eye_color=="yellow") %>%
drop_na(species) %>%
ggplot(aes(eye_color, fill = species))+
geom_bar(position = "dodge", alpha= 0.4)+theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
df %>%
filter(sex=="male" | sex=="female") %>%
mutate(height = as.factor(height)) %>%
group_by(height)%>%
summarise( mean_len= mean(mass), sd_len = sd(mass)) %>%
ggplot(aes(height, mean_len))+
geom_point(size =3, colour="lightblue") + geom_errorbar(aes(x=height, ymin= mean_len - sd_lean, ymax = mean_len + sd_lean, width = 0.05))
df %>%
filter(sex == "male" | sex == "female") %>%
mutate(height = as.factor(height)) %>%
group_by(height) %>%
summarise(mean_len = mean(mass), sd_len = sd(mass)) %>%
ggplot(aes(height, mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(x = height, ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(sex == "male" | sex == "female") %>%
mutate(height = as.factor(height)) %>%
group_by(height) %>%
summarise(mean_len = mean(mass), sd_len = sd(mass)) %>%
ggplot(aes(height, mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(x = height, ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(sex == "male" | sex == "female") %>%
mutate(height = as.factor(height)) %>%
group_by(height) %>%
summarise(mean_len = mean(height), sd_len = sd(height)) %>%
ggplot(aes(height, mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(x = height, ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(sex == "male" | sex == "female") %>%
group_by(height) %>%
summarise(mean_len = mean(height, na.rm = TRUE), sd_len = sd(height, na.rm = TRUE)) %>%
ggplot(aes(factor(height), mean_len)) +  # Convert height to factor for discrete x-axis
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(sex == "male" | sex == "female") %>%
group_by(mass) %>%
summarise(mean_len = mean(mass, na.rm = TRUE), sd_len = sd(height, na.rm = TRUE)) %>%
ggplot(aes(factor(mass), mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
filter(birth_year <250) %>%
drop_na(sex) %>%
ggplot(aes(birth_year, fill=sex))+     geom_density(alpha=0.3)+theme_bw()
df %>%
drop_na(sex) %>%
filter(mass < 80)
filter(sex == "male" | sex == "female") %>%
group_by(mass) %>%
summarise(mean_len = mean(mass, na.rm = TRUE), sd_len = sd(height, na.rm = TRUE)) %>%
ggplot(aes(factor(mass), mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(mass < 90)
filter(sex == "male" | sex == "female") %>%
group_by(mass) %>%
summarise(mean_len = mean(mass, na.rm = TRUE), sd_len = sd(height, na.rm = TRUE)) %>%
ggplot(aes(factor(mass), mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
drop_na(sex) %>%
filter(mass < 70) %>%
filter(sex == "male" | sex == "female") %>%
group_by(mass) %>%
summarise(mean_len = mean(mass, na.rm = TRUE), sd_len = sd(height, na.rm = TRUE)) %>%
ggplot(aes(factor(mass), mean_len)) +
geom_point(size = 3, colour = "lightblue") +
geom_errorbar(aes(ymin = mean_len - sd_len, ymax = mean_len + sd_len), width = 0.05)
df %>%
ggplot(df, aes(x = reorder(name, height), y = height)) +
geom_segment(aes(xend = name, yend = 0), color = "grey") +  # Lollipop stick
geom_point(size = 4, color = "blue") +  # Lollipop head
coord_flip() +  # Flip to horizontal
labs(title = "Top 10 Tallest Star Wars Characters",
x = "Character",
y = "Height (cm)") +
theme_minimal()
df %>%
drop_na(height) %>%
arrange(desc(height)) %>%
ggplot(df, aes(x = reorder(name, height), y = height)) +
geom_segment(aes(xend = name, yend = 0), color = "grey") +  # Lollipop stick
geom_point(size = 4, color = "blue") +  # Lollipop head
coord_flip() +  # Flip to horizontal
labs(title = "Top 10 Tallest Star Wars Characters",
x = "Character",
y = "Height (cm)") +
theme_minimal()
df %>%
drop_na(height) %>%
arrange(desc(height)) %>%  # Sort by height
head(10) %>%  # Select top 10 tallest characters
ggplot(aes(x = reorder(name, height), y = height)) +  # Fix ggplot mapping
geom_segment(aes(x = name, xend = name, y = 0, yend = height), color = "grey") +  # Lollipop stick
geom_point(size = 4, color = "blue") +  # Lollipop head
coord_flip() +  # Flip to horizontal
labs(title = "Top 10 Tallest Star Wars Characters",
x = "Character",
y = "Height (cm)") +
theme_minimal()  # Clean theme
df %>%
drop_na(height) %>%
arrange(desc(height)) %>%  # Sort by height
head(10) %>%  # Select top 10 tallest characters
ggplot(aes(x = reorder(name, height), y = height)) +  # Fix ggplot mapping
geom_segment(aes(x = name, xend = name, y = 0, yend = height), color = "grey") +  # Lollipop stick
geom_point(size = 4, color = "blue") +  # Lollipop head
labs(title = "Top 10 Tallest Star Wars Characters",
x = "Character",
y = "Height (cm)") +
theme_minimal()  # Clean theme
knitr::opts_chunk$set(echo = TRUE)
project<-read.csv("Banking_cleaned.csv")
head(project)
library(dplyr)
df_snapshot <- df %>%
head(10)
df_snapshot <- df %>%
head(10)
print(df_snapshot)
df_snapshot <-project  %>%
head(10)
print(df_snapshot)
library(dplyr)
library(gt)
library(dplyr)
install.packages("gt")
library(dplyr)
library(gt)
#library(dplyr)
#library(gt)
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
#library(dplyr)
#library(gt)
#install.packages("rlang")
install.packages("gt")
install.packages("gt")
#library(dplyr)
library(gt)
install.packages(c("BH", "bit", "bit64", "bslib", "caret", "classInt", "cli", "clock", "commonmark", "corrplot", "cpp11", "curl", "data.table", "dendextend", "doBy", "emmeans", "evaluate", "fontawesome", "foreign", "fs", "future.apply", "gdata", "gifski", "glue", "googlePolylines", "gower", "gtable", "hardhat", "Hmisc", "igraph", "janitor", "jpeg", "jsonlite", "KernSmooth", "knitr", "later", "lava", "lme4", "lubridate", "maps", "markdown", "MatrixModels", "mime", "multcomp", "mvtnorm", "nlme", "nloptr", "NLP", "openssl", "packcircles", "parallelly", "pillar", "pkgbuild", "processx", "progressr", "promises", "ps", "purrr", "quantreg", "R.oo", "R.utils", "R6", "ranger", "raster", "Rcpp", "readxl", "recipes", "renv", "rgl", "rlang", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "sessioninfo", "sf", "shiny", "SimDesign", "slam", "sp", "spatial", "spData", "stars", "survival", "systemfonts", "terra", "testthat", "textshaping", "TH.data", "tinytex", "tm", "tmap", "tmaptools", "tree", "tzdb", "units", "V8", "waldo", "withr", "wk", "xfun", "XML", "xml2", "zoo"))
install.packages("rlang")
install.packages(c("cli", "lme4", "V8", "xfun"))
install.packages("V8")
#libraries needed
library(tidyverse)  # For data manipulation and visualization
library(data.table) # For efficient data handling
library(ggplot2)    # For visualization
library(caret)      # For machine learning pre processing
library(corrplot)   # For correlation analysis
library(factoextra) #For PCA
library(GGally)
install.packages(c("jsonlite", "lme4", "stringi", "V8"))
airlines <-read.csv("US Airline Flight Routes and Fares 1993-2024.csv")
setwd("C:/Users/neemi/OneDrive/Área de Trabalho/COLLEGE/GRACELAND/SPRING 25/BUS ANALYSIS/Regression Analysis Project")
airlines <-read.csv("US Airline Flight Routes and Fares 1993-2024.csv")
head(airlines)
library(dplyr)
new_dataset <- airlines %>% filter((airport_1 == "DSM" | airport_1 == "MCI") & Year == 2023)
new_dataset <- new_dataset %>% select(-c(tbl,citymarketid_1,citymarketid_2,airportid_1,airportid_2,Geocoded_City1,Geocoded_City2,tbl1apk))
head(new_dataset)
dim(new_dataset)
library(writexl)
# Save the dataset as an Excel file
write_xlsx(new_dataset, "Regression_Analysis_dsm_mci_2023.xlsx")
